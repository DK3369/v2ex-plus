name: buildAndDeploy

on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

# ref: https://github.com/cardinalby/memrise-audio-uploader/blob/master/.github/workflows/buildAndDeploy.yml
jobs:
  build:
    name: Publish webextension
    
    env:
      EXTENSION_DIR_PATH: '.'
      PACKED_ZIP_PATH: 'extension.zip'

      G_EXTENSION_ID: 'daeclijmnojoemooblcbfeeceopnkolo'
      FF_EXTENSION_ID: '{690c1618-4b2c-4905-bf58-1fc82bdfd6e7}'

      OFFLINE_XPI_PATH: 'build/extension.offline.xpi'
      OFFLINE_XPI_ASSET_NAME: 'extension.offline.xpi'

      WEBSTORE_PUBLISHED_CRX_PATH: 'extension.webstore.crx'
      WEBSTORE_PUBLISHED_CRX_ASSET_NAME: 'extension.webstore.crx'

      DELAYED_CHROME_WEBSTORE_DEPLOY_TAG: 'deploy-to-chrome-webstore'
    
    runs-on: ubuntu-latest

    environment: product

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - uses: olegtarasov/get-tag@v2.1
        id: tagName

      - name: Pack directory
        id: packExtensionDir
        uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
        with:
          extensionDir: ${{ env.EXTENSION_DIR_PATH }}
          zipFilePath: ${{ env.PACKED_ZIP_PATH }}
          zipIgnore: '*.git*|/*node_modules/*|*.eslint*'

      - uses: actions/upload-artifact@v2
        with:
          name: v2ex-plus-${{ steps.tagName.outputs.tag }}
          path: ${{ env.PACKED_ZIP_PATH }}        

      - name: Fetch Google API access token
        id: gAccessToken
        uses: cardinalby/google-api-fetch-token-action@v1
        with:
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          refreshToken: ${{ secrets.REFRESH_TOKEN }}

      - name: Upload to Google Web Store
        id: gWebStoreUpload
        uses: cardinalby/webext-buildtools-chrome-webstore-upload-action@master
        continue-on-error: true
        with:
          zipFilePath: ${{ env.PACKED_ZIP_PATH }}
          extensionId: ${{ env.G_EXTENSION_ID }}
          apiAccessToken: ${{ steps.gAccessToken.outputs.accessToken }}

      - name: Publish at Google Web Store
        id: gWebStorePublish
        if: steps.gWebStoreUpload.outputs.newVersion
        uses: cardinalby/webext-buildtools-chrome-webstore-publish-action@master
        with:
          extensionId: ${{ env.G_EXTENSION_ID }}
          apiAccessToken: ${{ steps.gAccessToken.outputs.accessToken }}

      - name: Abort on Google Web Store error
        if: "!steps.gWebStoreUpload.outputs.newVersion && steps.gWebStoreUpload.outputs.inReviewError != 'true'"
        run: |
          echo "WebStore newVersion: ${{ steps.gWebStoreUpload.outputs.newVersion }}"
          echo "WebStore inReviewError: ${{ steps.gWebStoreUpload.outputs.inReviewError }}"

      - name: Download published crx file
        id: gWebStoreDownloadCrx
        if: steps.gWebStorePublish.outcome == 'success'
        uses: cardinalby/webext-buildtools-chrome-webstore-download-crx-action@master
        with:
          extensionId: ${{ secrets.G_EXTENSION_ID }}
          crxFilePath: ${{ env.WEBSTORE_PUBLISHED_CRX_PATH }}

      - name: Deploy to Firefox Addons
        uses: cardinalby/webext-buildtools-firefox-addons-action@master
        with:
          zipFilePath: ${{ env.PACKED_ZIP_PATH }}
          extensionId: ${{ env.FF_EXTENSION_ID }}
          jwtIssuer: ${{ secrets.FF_JWT_ISSUER }}
          jwtSecret: ${{ secrets.FF_JWT_SECRET }}

      - name: Sign Firefox xpi for offline distribution
        id: ffSignXpi
        uses: cardinalby/webext-buildtools-firefox-sign-xpi-action@master
        with:
          timeoutMs: 300000
          zipFilePath: ${{ env.PACKED_ZIP_PATH }}
          xpiFilePath: ${{ env.OFFLINE_XPI_PATH }}
          jwtIssuer: ${{ secrets.FF_JWT_ISSUER }}
          jwtSecret: ${{ secrets.FF_JWT_SECRET }}

      - name: Create Release
        id: createRelease
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tagName.outputs.tag }}
          release_name: Release ${{ steps.tagName.outputs.tag }}
          body: Extension release
          draft: false
          prerelease: false

      - name: Upload webstore published crx release asset
        if: steps.gWebStoreDownloadCrx.outcome == 'success'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createRelease.outputs.upload_url }}
          asset_path: ${{ steps.gWebStoreDownloadCrx.outputs.crxFilePath }}
          asset_name: ${{ env.WEBSTORE_PUBLISHED_CRX_ASSET_NAME }}
          asset_content_type: application/x-chrome-extension

      - name: Upload offline xpi release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createRelease.outputs.upload_url }}
          asset_path: ${{ steps.ffSignXpi.outputs.xpiFilePath }}
          asset_name: ${{ env.OFFLINE_XPI_ASSET_NAME }}
          asset_content_type: application/x-xpinstall